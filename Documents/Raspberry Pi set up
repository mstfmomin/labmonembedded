Burn SD card
enable SSH
Give device uniq name: UID000A
Expand file system
Set Time zone
set keyboard


Install Chrome
--------------------------
sudo apt-get update
sudo apt-get install chromium

Install Git
------------
sudo apt-get update
sudo apt-get install git


Install labmon embedded
------------------------
cd $Home
git config --global user.email "mstfmomin@gmail.com" && git config --global user.name "mstfmomin"
git clone https://github.com/mstfmomin/labmonembedded.git


Install DHT22 library
----------------------------------
cd labmonembedded && git clone https://github.com/adafruit/Adafruit_Python_DHT.git && cd Adafruit_Python_DHT
sudo apt-get update && sudo apt-get install build-essential python-dev && sudo python setup.py install

Test DHT22 Library
---------
cd examples && sudo ./AdafruitDHT.py 11 4

Test MAX31855
------------------------------
sudo python /home/pi/labmonembedded/MAX31855Test.py

-----------------
sudo reboot
----------------------


Install psycopg2
-----------------
sudo apt-get update && sudo apt-get install python-psycopg2


Run main python code
-------------------------------
sudo python /home/pi/labmonembedded/print_row.py

-----------------
sudo reboot
----------------------


Find IP address. 
------------------------
hostname -I

-------------
sudo nano /etc/wpa_supplicant/wpa_supplicant.conf


Test wifi
-------------
sudo nano /etc/network/interfaces

-----------------------
auto lo
iface lo inet loopback

auto eth0
allow-hotplug eth0
iface eth0 inet manual

auto wlan0
allow-hotplug wlan0
iface wlan0 inet manual
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

auto wlan1
allow-hotplug wlan1iface wlan1 inet manual
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

-------

sudo nano /etc/wpa_supplicant/wpa_supplicant.conf

--------
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1

network={
    key_mgmt=NONE
    priority=-999
}

---------

  
  
Run Python in the background
---------------------------

sudo nano /etc/init.d/BgRunMain
###########################################################

#! /bin/sh
# /etc/init.d/BgRunMain 

### BEGIN INIT INFO
# Provides:          BgRunMain
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Simple script to start a program at boot
# Description:       A simple script from www.stuffaboutcode.com which will start / stop a program a boot / shutdown.
### END INIT INFO

# If you want a command to always run, put it here

# Carry out specific functions when asked to by the system
case "$1" in
  start)
    echo "Starting print_row"
    # run application you want to start
    sudo python /home/pi/labmonembedded/print_row.py &
    sudo python /home/pi/labmonembedded/WifiConn.py &
    ;;
  stop)
    echo "Stopping print_row"
    # kill application you want to stop
    killall sudo python /home/pi/labmonembedded/print_row.py &
    killall sudo python /home/pi/labmonembedded/WifiConn.py &
    ;;
  *)
    echo "Usage: /etc/init.d/print_row {start|stop}"
    exit 1
    ;;
esac

exit 0

##############################

------------------------------------------
sudo chmod 755 /etc/init.d/BgRunMain
sudo update-rc.d BgRunConn defaults
sudo update-rc.d -f  BgRunConn remove
-----------------------------------------------

###################################################################


-------------------------
sudo pip install flask
sudo apt-get install avahi-daemon
-----------------------------------

---------------------------------------------
http://mattrichardson.com/Raspberry-Pi-Flask/
http://code.runnable.com/UhLMQLffO1YSAADK/handle-a-post-request-in-flask-for-python
---------------------------------

cd labmonembedded

sudo nano WifiConn.py 

##################################################################    
    
#!/usr/bin/env python

# We need to import request to access the details of the POST request
# and render_template, to render our templates (form and response)
# we'll use url_for to get some URLs for the app on the templates
from flask import Flask, render_template, request, url_for
import time
# Initialize the Flask application
app = Flask(__name__)

# Define a route for the default URL, which loads the form
@app.route('/')
def form():
    return render_template('registration.html')

# Define a route for the action of the form, for example '/hello/'
# We are also defining which type of requests this route is 
# accepting: POST requests in this case
@app.route('/hello/', methods=['POST'])
def hello():
    ssid=request.form['ssid']
    wifipass=request.form['wifipass']

    #Write SSID and PSK to wpa_supplicant.conf
    file = open('/etc/wpa_supplicant/wpa_supplicant.conf','a')
    file.write('\n\nnetwork={\n     ssid="')
    file.write(ssid)
    file.write('"\n     psk="')
    file.write(wifipass)
    file.write('"\n}')
    file.close()   
    return render_template('result.html', ssid=ssid, wifipass=wifipass)

# Run the app :)
if __name__ == '__main__':
  app.run( 
        host="0.0.0.0",
        port=int("80")
  )


######################################################

-------------------------------------------
mkdir templates && cd templates
sudo nano registration.html
------------------------------------------

<!DOCTYPE html>
<html>
    <head>
        <title>LabMon WiFi Connect</title>
        <link rel=stylesheet type=text/css href="{{ url_for('static', filename='style.css') }}">
    </head>
    <body>
        <div id="container">
            <div class="title">
                <h1>Connect LabMon to WiFi</h1>
            </div>
            <div id="content">
                <form method="post" action="{{ url_for('hello') }}">
                  <label for="ssid">Please enter your WiFi Name:</label>
                  <input type="text" name="ssid" /><br />
                  <label for="wifipass">Please enter your WiFi Password:</label>
                  <input type="text" name="wifipass" /><br />
		  <input type="submit" value="Connect"/>
                </form>
            </div>
            </div>
        </div>
    </body>
</html>

################################################################

-------------------------------------------
sudo nano result.html
------------------------------------------

############################################################
  
   <html>
    <head>
        <title>Result</title>
        <link rel=stylesheet type=text/css href="{{ url_for('static', filename='style.css') }}">
    </head>
    <body>
        <div id="container">
            <div class="title">
                <h1>Success! WiFi listed</h1>
		<p>
			Your wifi configaration file has been saved to
			wifi configaration file. To connect to the internet
			by wifi unplug the power cable from LabMon	
		</p>
            </div>
            <div id="content">
                LabMon has connected to <strong>{{ssid}}</strong>!
		<h3>
			LabMon will be restart in 5 second
		</h4>
            </div>
            </div>
        </div>
    </body>
</html>

##############################################################

-------------------------------------------
mkdir static && cd static
sudo nano result.html
------------------------------------------

#######################################################
::selection{ background-color: #E13300; color: white; }
::moz-selection{ background-color: #E13300; color: white; }
::webkit-selection{ background-color: #E13300; color: white; }

body {
    font-family: "Helvetica Neue",Helvetica,Arial,"Lucida Grande",sans-serif;
    color: #888;
    font-style: normal;
    font-size: 14px;
    line-height: 22px;
}

a {
    color: #003399;
    background-color: transparent;
    font-weight: normal;
}

.title {
    padding: 0 20px;
    background: #32373a;
    position: relative;
    height: 50px;
}

h1 {
    color: #fff;
    margin: 0;
    font-size: 18px;
    font-weight: 400;
    line-height: 50px;
    text-transform: capitalize;
}

code {
    font-family: Consolas, Monaco, Courier New, Courier, monospace;
    font-size: 12px;
    background-color: #f9f9f9;
    border: 1px solid #D0D0D0;
    color: #002166;
    display: block;
    padding: 12px 10px 12px 10px;
}

#content {
    padding: 20px;
    zoom: 1;
}

#body{
    margin: 0 15px 0 15px;
}

p.footer{
    text-align: right;
    font-size: 11px;
    border-top: 1px solid #D0D0D0;
    line-height: 32px;
    padding: 0 10px 0 10px;
    margin: 20px 0 0 0;
}

#container{
    margin: 10px;
    border: 1px solid #D0D0D0;
    -webkit-box-shadow: 0 0 8px #D0D0D0;
}

/* Form Styles */
form label{
    display: block;
    margin-bottom: 5px;
}
form input[type=text]{
    border: 1px solid #aaa;
    border-radius: 2px;
    box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
    box-sizing: border-box;
    padding: 5px;
    margin-bottom: 20px;
    outline: 0;
    -webkit-border-radius: 2px;
    -moz-border-radius: 2px;
    -webkit-box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
    -moz-box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
}
form input[type=submit]{
    background: #198ad1;
    color: #fff;
    display: inline-block;
    padding: 0 20px;
    font-size: 16px;
    line-height: 2.6em;
    font-family: "Helvetica Neue",Helvetica,Arial,"Lucida Grande",sans-serif;
    font-weight: 400;
    -webkit-box-shadow: inset 0 -1px 0 rgba(0,0,0,.1);
    -moz-box-shadow: inset 0 -1px 0 rgba(0,0,0,.1);
    box-shadow: inset 0 -1px 0 rgba(0,0,0,.1);
    -webkit-border-radius: 2px;
    -moz-border-radius: 2px;
    border-radius: 2px;
    text-transform: capitalize;
    border: 0;
    cursor: pointer;
    text-align: center;
} 


###################################################

---------------------------------
sudo python WifiConn.py 
----------------------------------------


##############################################
https://rpi.tnet.com/project/scripts/wifi_check

########################################################################################################
network={
        key_mgmt=NONE
        priority=-999
}



network={
     ssid="labpump123"
     psk="labpump123"
}


network={
  ssid="MSU-Secure"
  scan_ssid=1
  key_mgmt=WPA-EAP
  pairwise=CCMP TKIP
  group=CCMP TKIP
  eap=PEAP
  identity="r35j966"
  password="HeyIdiots23!"
  phase1="peapver=0"
  phase2="MSCHAPV2"
  }
  
  ###########
  
auto lo
iface lo inet loopback

auto eth0
allow-hotplug eth0
iface eth0 inet manual

auto wlan0
allow-hotplug wlan0
iface wlan0 inet manual
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

auto wlan1
allow-hotplug wlan1
iface wlan1 inet manual
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

#################################################
